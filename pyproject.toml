[project]
authors = [
    {name = "betaboon", email = "betaboon@0x80.ninja"},
]
license = {text = "MIT"}
name = "aio-microservice"
description = "A library to create microservices."
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Typing :: Typed",
]
readme = "README.md"
dynamic = ["version"]
requires-python = ">=3.8,<3.12"
dependencies = []

[project.urls]
Homepage = "https://github.com/betaboon/aio-microservice"
Documentation = "https://betaboon.github.io/aio-microservice"
Source = "https://github.com/betaboon/aio-microservice"
Tracker = "https://github.com/betaboon/aio-microservice/issues"
Changelog = "https://github.com/betaboon/aio-microservice/releases"

[tool.pdm]

[tool.pdm.dev-dependencies]
dev = [
    "black>=23.3.0",
    "gitlint>=0.19.1",
    "pre-commit>=3.2.2",
    "python-semantic-release>=7.33.2",
    "ruff>=0.0.262",
]
docs = [
    "furo>=2023.3.27",
    "myst-parser>=1.0.0",
    "sphinx-autobuild>=2021.3.14",
    "sphinx-autodoc-typehints>=1.23.0",
    "sphinx-copybutton>=0.5.2",
    "sphinx>=6.1.3",
]
test = [
    "pytest>=7.3.1",
]

[tool.pdm.scripts]
install-git-hooks = "pre-commit install --install-hooks"
lint = "pre-commit run --all-files"
test = "pytest"
docs-build = "sphinx-build docs build/docs"
docs-serve = "sphinx-autobuild docs build/docs"

[tool.pdm.scripts.ci-lint]
cmd = [
  "pre-commit", "run",
  "--show-diff-on-failure",
  "--from-ref", "$FROM_REF",
  "--to-ref", "$TO_REF",
]

[tool.pdm.scripts.ci-lint-commits]
cmd = [
  "gitlint",
  "--contrib", "contrib-title-conventional-commits",
  "--ignore", "body-is-missing",
  "--commits", "$FROM_REF..$TO_REF",
]

[tool.pdm.scripts.ci-version]
cmd = "semantic-release print-version --next"

[tool.pdm.scripts.ci-changelog]
cmd = "semantic-release changelog --unreleased"

[tool.pdm.version]
source = "scm"
write_to = "aio_microservice/__version__.py"
write_template = "__version__ = \"{}\""

[tool.semantic_release]
branch = "main"
version_source = "tag_only"
version_pattern = "d+.d+.d+"
tag_format = "{version}"

[tool.mypy]
strict = true

[tool.ruff]
select = [
  "E",  # pycodestyle
  "W",  # pycodestyle
  "F",  # pyflakes
  "I",  # isort
]
ignore = [
  "E501",  # line-too-long, handled by black
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # unused-imports

[tool.ruff.isort]
combine-as-imports = true

[tool.pytest.ini_options]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"
